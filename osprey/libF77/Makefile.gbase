# -*- Makefile -*-
#
#  Copyright (C) 2006. QLogic Corporation. All Rights Reserved.
#
#  Copyright (C) 2000, 2001 Silicon Graphics, Inc.  All Rights Reserved.
#
#  This program is free software; you can redistribute it and/or modify it
#  under the terms of version 2.1 of the GNU Lesser General Public License 
#  as published by the Free Software Foundation.
#
#  This program is distributed in the hope that it would be useful, but
#  WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
#
#  Further, this software is distributed without any warranty that it is
#  free of the rightful claim of any third person regarding infringement 
#  or the like.  Any license provided herein, whether implied or 
#  otherwise, applies only to this software file.  Patent licenses, if
#  any, provided herein do not apply to combinations of this program with 
#  other software, or any other product whatsoever.  
#
#  You should have received a copy of the GNU Lesser General Public 
#  License along with this program; if not, write the Free Software 
#  Foundation, Inc., 59 Temple Place - Suite 330, Boston MA 02111-1307, 
#  USA.
#
#  Contact information:  Silicon Graphics, Inc., 1600 Amphitheatre Pky,
#  Mountain View, CA 94043, or:
#
#  http://www.sgi.com
#
#  For further information regarding this notice, see:
#
#  http://oss.sgi.com/projects/GenInfo/NoticeExplan
#
#

# USMID @(#)libF77/Makefile.base	92.10	11/04/99 11:07:16

#
#  Makefile.base for libF77.so
#

include $(COMMONDEFS)

LCINCS += -I$(BUILD_TOT)/include

LCDEFS += -D_LITTLE_ENDIAN
LCINCS += -I$(BUILD_TOT)/clibinc
LCINCS += -I$(BUILD_TOT)/clibinc/cray

LCDEFS += -DKEY $(ERROR_ON_WARNINGS)

ifeq ($(BUILD_TARGET), IA32)
LCDEFS += -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE
endif

ifeq ($(BUILD_HOST), X8664)
LCDEFS += -D_WORD32
LCDEFS += -D_LIB_INTERNAL
LCDEFS += -D_GNU_SOURCE
LCDEFS += -U__mips
endif
ifeq ($(BUILD_HOST), IA32)
LCDEFS += -D_WORD32
LCDEFS += -D_LIB_INTERNAL
LCDEFS += -D_GNU_SOURCE
LCDEFS += -U__mips
endif
ifeq ($(BUILD_HOST), MIPS)
LCDEFS += -D_WORD32
LCDEFS += -D_LIB_INTERNAL
LCDEFS += -D_GNU_SOURCE
LCDEFS += -U__mips
endif

LCINCS += -I$(BUILD_TOT)/clibroot
ifeq ($(BUILD_ABI), N32BIT)
LCDEFS += -D_WORD32 -Wa,-mips4
endif

LASOPTS = $(STD_COMPILE_OPTS)

LF77OPTS = $(STD_COMPILE_OPTS)
FFLAGS_NOLANG = $(FFLAGS:N-LANG\:exceptions=O*)

ifeq ($(BUILD_OPTIMIZE), DEBUG)
LCDEFS += -DLIBDEBUG -D_ASSERT_ON -DDEBUG_MTIO
endif
ifeq ($(BUILD_OPTIMIZE), NODEBUG)
OPTIMIZER = -O3
F90FLAGS =
endif
ifeq ($(BUILD_COMPILER), OSP)
OPTIMIZER += -fno-fast-stdlib
endif
ifeq ($(BUILD_COMPILER), PSC)
OPTIMIZER += -fno-fast-stdlib
endif

# use the f90 compiler for fortran

LIBRARY = libF77.a
PROF_LIB = libF77_p.a
DSO = libF77.so
DSO_NAME = libF77.so

ifeq ($(BUILD_ABI), N32BIT)
LLDDSOOPTS = # -n32
else
LLDDSOOPTS =
endif

ifeq ($(BUILD_TYPE), NONSHARED)
TARGETS = $(LIBRARY)
LINK_TARGET = $(LIBRARY)
else
ifeq ($(BUILD_OS),DARWIN)
TARGETS = $(LIBRARY) $(PROF_LIB) $(DSO)
LINK_TARGET = $(DSO) $(LIBRARY)
else
TARGETS = $(LIBRARY) $(PROF_LIB) $(DSO)
LINK_TARGET = $(DSO)
endif
endif

FC_COMPILER = $(shell echo $(FC) | awk '{print $$1}' )
WHICH_FC = $(shell basename `which $(FC_COMPILER) 2>/dev/null` 2>/dev/null )

ifneq (X$(WHICH_FC), X)
default:
	$(MAKE)  first
	$(MAKE)  $(TARGETS)
	$(MAKE)  last
else
default:
	@echo "--------------------------------------------"
	@echo "Warning: libF77 is not build!"
	@echo "  Can not find the $(FC_COMPILER)"
	@echo "--------------------------------------------"
endif

first:
ifndef SKIP_DEP_BUILD
 ifeq ($(BUILD_OS), LINUX)
	$(call submake,$(BUILD_AREA)/include)
 endif
endif

last: make_libdeps


# from libF77

include $(BUILD_TOT)/libF77/libF77aslibfortran.gmakeinclude

# No additional files 

F90OBJECTS = $(F90FILES:.F90=.o)


# relasedefs defines RELEASE needed temporarily since building some ftn library
# components depends on whether building for redwood or banyan
# see bug report 250462, dlai
include $(BUILD_TOT)/linux/make/releasedefs

ifeq ($(BUILD_OPTIMIZE), DEBUG)
# LCDEFS += -DDEBUG // comment out for now because ffio wont build with it
LASDEFS += -DDEBUG
endif


LDIRT += $(LIBRARY)

include $(COMMONRULES)

OBJECTS += $(F90OBJECTS)
SOURCES += $(F90FILES)

VPATH    = $(SRC_DIRS)
LCINCS += $(addprefix -I, $(SRC_DIRS))

$(LIBRARY): $(OBJECTS)
	$(ar) cru $@ $^
	$(ranlib) $@

$(PROF_LIB): $(OBJECTS:%.o=%.pg.o)
	$(ar) cru $@ $^
	$(ranlib) $@

$(DSO): $(OBJECTS:%.o=%.pic.o)
ifeq ($(BUILD_OS), DARWIN)
	@echo "Skipping unneeded " $(DSO)
else
	$(ld) $(STD_DSO_LOADOPTS) -o $@ $^
endif
