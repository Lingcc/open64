#! /usr/bin/perl -w
#
#  Copyright (C) 2012 Hewlett Packard, Company.  All Rights Reserved.
# 
#  Copyright (C) 2006-2009 Tsinghua University.  All Rights Reserved.
#
#  This program is free software; you can redistribute it and/or modify it
#  under the terms of version 2 of the GNU General Public License as
#  published by the Free Software Foundation.
#
#  This program is distributed in the hope that it would be useful, but
#  WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
#
#  Further, this software is distributed without any warranty that it is
#  free of the rightful claim of any third person regarding infringement 
#  or the like.  Any license provided herein, whether implied or 
#  otherwise, applies only to this software file.  Patent licenses, if 
#  any, provided herein do not apply to combinations of this program with 
#  other software, or any other product whatsoever.  
#
#  You should have received a copy of the GNU General Public License along
#  with this program; if not, write the Free Software Foundation, Inc., 59
#  Temple Place - Suite 330, Boston MA 02111-1307, USA.

# This is a wraper around opencc to be compatible with gcc for:
# ia32 native, Linux kernel build, tested version: 2.6.27
# Useage:
#	make CC=kopencc 
# We updated it to build Linux 2.6.32.6 on x86_64 target
# with the same usage.

use strict;

my @newargs;
my $opt_level="";

## adjust the gcc special options
foreach my $arg (@ARGV) {
  SWITCH: {
      if ($arg eq "-fno-delete-null-pointer-checks") { last SWITCH; }
      if ($arg eq "-mno-red-zone") { last SWITCH; }
      if ($arg eq "-mno-sse") { last SWITCH; }
      if ($arg eq "-mno-sse2") { last SWITCH; }
      if ($arg eq "-mno-3dnow") { last SWITCH; }
      if ($arg eq "-mno-mmx") { last SWITCH; }
      if ($arg eq "-funit-at-a-time") { last SWITCH; }
      if ($arg eq "-maccumulate-outgoing-args") { last SWITCH; }
      if ($arg eq "-fno-asynchronous-unwind-tables") { last SWITCH; }
      if ($arg eq "-fno-stack-protector") { last SWITCH; }
      if ($arg eq "-fno-optimize-sibling-calls") { last SWITCH; }
      if ($arg eq "-fno-strict-overflow") { last SWITCH; }
      if ($arg eq "-fno-dwarf2-cfi-asm") { last SWITCH; }
      if ($arg eq "-fconserve-stack") { last SWITCH; }
      if ($arg eq "-Wno-unused-but-set-variable") { last SWITCH; }
      if ($arg eq "-Wuninitialized") { last SWITCH; }
      if ($arg eq "-Wall") { last SWITCH; }
      if ($arg eq "-mtune=generic") { last SWITCH; }
      if ($arg eq "-fasynchronous-unwind-tables") { last SWITCH; }
      if ($arg eq "-fno-toplevel-reorder") { last SWITCH; }
      if ($arg =~ "^-O([0-9]|s)") { if ($opt_level eq "") {$opt_level = $arg; } else {last SWITCH; }}
      if ($arg =~ "^-Wframe-larger-than=") { last SWITCH; }
      if ($arg =~ "^-mpreferred-stack-boundary=") { last SWITCH; }
      
      if ($arg eq "-v") { 
          print "Wrapper functionality for opencc kernel build ver 2.0\n"; 
          exit exec("opencc","-v"); 
      }
      if ($arg eq "-help") {
          print "kopencc for linux kernel builing\n";
          print "cd /path/to/kernel/source\n";
          print "make V=1 CC=\"kopencc\"\n";
          exit 0;
      }

## change special characters to fit for command line
## ( => \(
## ) => \)
## ".*" -> '".*"'
## < => \<
## > => \>
## | => \| 
      $arg =~ s /\(/\\(/g; 
      $arg =~ s /\)/\\)/g;
      $arg =~ s /"(.*)"$/'"$1"'/g;
      $arg =~ s /\</\\</g;
      $arg =~ s /\|/\\|/g;
      $arg =~ s /\>/\\>/g;

      push @newargs , $arg;
    }
}

## tuning options
push @newargs, "-Wno-unused";
push @newargs, "-LANG:global_asm=1";

## miscellaneous
if ( $opt_level eq "-O0" ) {
    push @newargs, "-finline";
} 

if ( $opt_level eq "-O2" || 
     $opt_level eq "-Os" ||
     $opt_level eq "" ) {
## codesize tuning
    push @newargs, "-OPT:unroll_times=0";
    push @newargs, "-WOPT:pro_loop_limit=0";
    push @newargs, "-WOPT:tail_dup_max_clone=0";
    push @newargs, "-CG:hb_tail_duplication=0";
    push @newargs, "-CG:p2align=0";
## opencc special options 
    push @newargs, "-OPT:swp=off";
    push @newargs, "-OPT:Olimit=0";
    push @newargs, "-WOPT:warn_uninit=0";
}

## the system command
my $cmd="opencc";
foreach my $i (@newargs) {
    $cmd .= " " . $i;
}

## print the command for debug
## and execute the command.
print STDERR "# ",$cmd;
print STDERR "\n";
exec($cmd);

