#
#
#  Copyright (C) 2000, 2001 Silicon Graphics, Inc.  All Rights Reserved.
#
#  This program is free software; you can redistribute it and/or modify it
#  under the terms of version 2 of the GNU General Public License as
#  published by the Free Software Foundation.
#
#  This program is distributed in the hope that it would be useful, but
#  WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
#
#  Further, this software is distributed without any warranty that it is
#  free of the rightful claim of any third person regarding infringement 
#  or the like.  Any license provided herein, whether implied or 
#  otherwise, applies only to this software file.  Patent licenses, if 
#  any, provided herein do not apply to combinations of this program with 
#  other software, or any other product whatsoever.  
#
#  You should have received a copy of the GNU General Public License along
#  with this program; if not, write the Free Software Foundation, Inc., 59
#  Temple Place - Suite 330, Boston MA 02111-1307, USA.
#
#  Contact information:  Silicon Graphics, Inc., 1600 Amphitheatre Pky,
#  Mountain View, CA 94043, or:
#
#  http://www.sgi.com
#
#  For further information regarding this notice, see:
#
#  http://oss.sgi.com/projects/GenInfo/NoticeExplan
#
#

#----------------------------------------------------------------------
#  Information about Makefile
#
#  This Makefile is used to build prompf_anl.so
#
#  *  This Makefile does not require that targ_info has already been built.
#
#  *  Because the Makefile removes temporary files that are in the
#     current directory (at startup and on interrupts) you can't
#     run two or more makes in the same directory at the same time.
#     (Perhaps, If I could force the temp files out to a temp directory,
#     this could be changed?)
#
#----------------------------------------------------------------------

#----------------------------------------------------------------------
#  Set environment variables
#
#  TARGDIR   :  is the targ specific directory in which we do build.
#               e.q.  /d1/cmplrs.src/v4.00/host32
#
#----------------------------------------------------------------------
TARGDIR = $(BUILD_AREA)
CURDIR  = .

ifndef TARG_BE
TARG_BE = $(TARGDIR)/be
endif

#----------------------------------------------------------------------
#  Include the usual commondefs
#----------------------------------------------------------------------
include $(COMMONDEFS)

#----------------------------------------------------------------------
#  Set environment variables
#----------------------------------------------------------------------
CVERSION  =  -xansi

#----------------------------------------------------------------------
#  Compiler Options
#----------------------------------------------------------------------
HOSTDEFS += -Dsgi
HOSTDEFS += -Dlonglong
# need to define _LONGLONG and _SVR4_SOURCE to allow compilation with -ansi.
HOSTDEFS += -D_LONGLONG -D_SVR4_SOURCE
# need to define BUILD_WHIRL2F to get appropriate code from common sources
HOSTDEFS += -DMONGOOSE_BE -DBUILD_PROMPF_ANL_SO -D_LIBELF_XTND_64

ifeq ($(BUILD_OPTIMIZE), DEBUG)
HOSTDEFS += -DIs_True_On
HOSTDEFS += -DInsist_On 
endif

HOSTDEFS += -D_NEW_SYMTAB

#----------------------------------------------------------------------
#  List of directories, and source files of interest
#----------------------------------------------------------------------

BE_DIR 			= $(BUILD_BASE)/..
BE_MIPS_DIR 		= $(BE_DIR)/MIPS
BE_BE_DIR 		= $(BE_DIR)/be
BE_CG_DIR 		= $(BE_DIR)/cg
BE_LNO_DIR 		= $(BE_DIR)/lno
BE_COM_DIR 		= $(BE_DIR)/com
BE_OPT_DIR 		= $(BE_DIR)/opt
BE_REGION_DIR 	        = $(BE_DIR)/region
BE_WHIRL2C_DIR 		= $(BE_DIR)/whirl2c
BE_WHIRL2F_DIR 		= $(BE_DIR)/whirl2f
BE_PROMPF_ANL_DIR 	= $(BE_DIR)/prompf_anl
COMMON_DIR 		= $(BUILD_TOT)/common
COMMON_COM_DIR 		= $(COMMON_DIR)/com
COMMON_COM_MIPS_DIR 	= $(COMMON_COM_DIR)/MIPS
COMMON_LIB_DIR 		= $(COMMON_DIR)/lib
COMMON_UTIL_DIR 	= $(COMMON_DIR)/util
COMMON_UTIL_MIPS_DIR 	= $(COMMON_UTIL_DIR)/MIPS
INCLUDE_DIR 		= $(ROOT)/usr/include
IPA_COM_DIR 		= $(BUILD_TOT)/ipa/common/
LIBCOMUTIL_DIR 		= $(BUILD_TOT)/libcomutil
TARG_BE_DIR             = $(TARGDIR)/be

TARG_COMUTIL_DIR	= $(TARGDIR)/libcomutil
TARG_WHIRL2C_DIR	= $(TARGDIR)/whirl2c
TARG_WHIRL2F_DIR	= $(TARGDIR)/whirl2f


# These are the directories in which to look for source files.

SRC_DIRS = \
  $(BE_COM_DIR)		\
  $(BE_LNO_DIR)		\
  $(BE_PROMPF_ANL_DIR)

HEADER_DIRS = \
  $(SRC_DIRS)		\
  $(COMMON_COM_DIR)	\
  $(COMMON_COM_MIPS_DIR)\
  $(COMMON_LIB_DIR)	\
  $(COMMON_UTIL_DIR)	\
  $(COMMON_UTIL_MIPS_DIR)\
  $(TARG_BE_DIR)	\
  $(BE_DIR)		\
  $(BE_WHIRL2C_DIR)	\
  $(BE_WHIRL2F_DIR)	\
  $(BE_BE_DIR)		\
  $(BE_CG_DIR)		\
  $(BE_OPT_DIR)



#----------------------------------------------------------------------
#  List of source files.  Please keep them in alphabetical order.
#----------------------------------------------------------------------

BE_COM_CXX_SRCS = \
   cxx_template.cxx	\

BE_LNO_CXX_SRCS = \
  lwn_util.cxx		\

BE_PROMPF_ANL_CXX_SRCS = \
  anl_diagnostics.cxx	\
  anl_cbuf.cxx		\
  anl_file_mngr.cxx	\
  anl_srcpos.cxx	\
  w2cf_translator.cxx	\
  anl_varlist.cxx	\
  anl_pragma_attribute.cxx	\
  anl_loop_construct.cxx	\
  anl_region_construct.cxx	\
  anl_pragma_construct.cxx	\
  anl_func_entry.cxx	\
  anl_driver.cxx	\
  anl_lno_dump.cxx

PROMPF_ANL_CXX_SRCS = \
  $(BE_COM_CXX_SRCS)		\
  $(BE_LNO_CXX_SRCS)		\
  $(BE_PROMPF_ANL_CXX_SRCS)

PROMPF_ANL_CXX_OBJS = $(PROMPF_ANL_CXX_SRCS:.cxx=.o)
PROMPF_ANL_DSOS = $(TARGDIR)/be/be.so 

# extra files to be removed with make clobber
LDIRT += ii_files


VPATH    =  $(SRC_DIRS)

LCOPTS = $(STD_COMPILE_OPTS) -fullwarn $(STD_C_OPTS)
LCDEFS = $(HOSTDEFS) $(TARGDEFS)
LCINCS = $(addprefix -I, $(HEADER_DIRS))

LC++OPTS = $(STD_COMPILE_OPTS) $(STD_C++_OPTS) -fullwarn $(WOFF)
LC++DEFS = $(HOSTDEFS) $(TARGDEFS)
LC++INCS = $(LCINCS)

LASDEFS = $(HOSTDEFS) $(TARGDEFS)
LASINCS = $(LCINCS)
LASOPTS = $(STD_COMPILE_OPTS)

# setup stuff to build shared or non-shared
GLDOPTS = $(STD_LOAD_OPTS) $(LD_QUICKSTART_INFO)

# setup stuff to build shared or non-shared
GLDOPTS = $(STD_LOAD_OPTS) $(LD_QUICKSTART_INFO)

DSOSTARTOPT = -check_registry $(TARG_BE)/so_locations -Wl,-no_unresolved
DSOSTARTOPT_32 = $(DSOSTARTOPT)
DSOSTARTOPT_N32 = $(DSOSTARTOPT)

ifeq ($(BUILD_VARIANT), MEM_STATS)
LCDEFS += -DMEM_STATS
LC++DEFS += -DMEM_STATS
LLDLIBS +=  -lmalloc
LDFLAGS += -lmalloc
endif

#----------------------------------------------------------------------
# File containing the list of symbols exported outside of prompf_anl.so
#----------------------------------------------------------------------
EXPORT_LIST = -exports_file $(BE_PROMPF_ANL_DIR)/Exported


#----------------------------------------------------------------------
#  Define target
#----------------------------------------------------------------------

TARGETS = prompf_anl.so

default: first $(TARGETS) last

#----------------------------------------------------------------------
#  Variables describing additional sources, objects, and libraries
#----------------------------------------------------------------------
LLDLIBS	= -none -lc

#----------------------------------------------------------------------
#  The commands in this section are done BEFORE any other target is
#  built.
#----------------------------------------------------------------------
first :
## verify that be.so is up to date
	$(call submake,$(TARGDIR)/be)

#----------------------------------------------------------------------
#  The commands in this section are done AFTER every other target is
#  built.
#----------------------------------------------------------------------
last : make_deps

#----------------------------------------------------------------------
#  Build 'prompf_anl.so'
#
#  These rules build the 'prompf_anl.so' by default, and can install
#  it in the $(BUILD_INSTALL)/usr/lib directory.
#
#----------------------------------------------------------------------


install:: default
	$(STD_INSTALL) $(STD_INSTALL_EXEC_MASK) -F $(STD_MONGOOSE_LOC) prompf_anl.so

prompf_anl.so:  $(PROMPF_ANL_CXX_OBJS) $(BE_BE_DIR)/so_locations
	$(C++F) -o prompf_anl.so $(STD_DSO_LOADOPTS) $(EXPORT_LIST) \
		$(PROMPF_ANL_CXX_OBJS) $(PROMPF_ANL_DSOS) $(LLDLIBS) -show

#----------------------------------------------------------------------
#  Include the usual commonrules
#----------------------------------------------------------------------
include $(COMMONRULES)


